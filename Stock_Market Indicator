import streamlit as st
import pandas as pd
from tvDatafeed import TvDatafeed, Interval
import ta
import plotly.graph_objects as go

# Initialize tvDatafeed
tv = TvDatafeed()

# Streamlit App UI
st.set_page_config(page_title="Stock Signal App", layout="wide")
st.title("üìà Indian Stock Signal Generator")

# User Inputs
symbol = st.text_input("Enter NSE Stock Symbol (e.g., RELIANCE, TCS):", "RELIANCE")
interval_map = {
    "Daily": Interval.in_daily,
    "Hourly": Interval.in_1_hour,
    "15-Min": Interval.in_15_minute,
}
interval_choice = st.selectbox("Select Time Interval:", list(interval_map.keys()))
n_bars = st.slider("Number of data points:", min_value=100, max_value=5000, step=100, value=1000)

if st.button("üîç Fetch and Analyze"):
    with st.spinner("Fetching data from TradingView..."):
        df = tv.get_hist(symbol=symbol.upper(), exchange="NSE", interval=interval_map[interval_choice], n_bars=n_bars)

    if df is not None and not df.empty:
        df = df.reset_index()
        df['SMA_20'] = ta.trend.sma_indicator(df['close'], window=20)
        df['SMA_50'] = ta.trend.sma_indicator(df['close'], window=50)
        df['RSI_14'] = ta.momentum.RSIIndicator(df['close'], window=14).rsi()

        # Generate Buy/Sell signals
        df['Signal'] = None
        for i in range(1, len(df)):
            if (
                df.loc[i-1, 'SMA_20'] < df.loc[i-1, 'SMA_50']
                and df.loc[i, 'SMA_20'] > df.loc[i, 'SMA_50']
                and df.loc[i, 'RSI_14'] < 70
            ):
                df.loc[i, 'Signal'] = 'Buy'
            elif (
                df.loc[i-1, 'SMA_20'] > df.loc[i-1, 'SMA_50']
                and df.loc[i, 'SMA_20'] < df.loc[i, 'SMA_50']
                and df.loc[i, 'RSI_14'] > 30
            ):
                df.loc[i, 'Signal'] = 'Sell'

        # Display data table
        st.subheader("üìÑ Data with Signals")
        st.dataframe(df[['datetime', 'close', 'SMA_20', 'SMA_50', 'RSI_14', 'Signal']].tail(100))

        # Download CSV
        csv = df.to_csv(index=False).encode('utf-8')
        st.download_button("üì• Download CSV", csv, f"{symbol}_signals.csv", "text/csv")

        # Plot
        st.subheader("üìä Price Chart with Buy/Sell Signals")
        fig = go.Figure()
        fig.add_trace(go.Scatter(x=df['datetime'], y=df['close'], name='Close'))
        fig.add_trace(go.Scatter(x=df['datetime'], y=df['SMA_20'], name='SMA 20'))
        fig.add_trace(go.Scatter(x=df['datetime'], y=df['SMA_50'], name='SMA 50'))

        buy_signals = df[df['Signal'] == 'Buy']
        sell_signals = df[df['Signal'] == 'Sell']
        fig.add_trace(go.Scatter(x=buy_signals['datetime'], y=buy_signals['close'], mode='markers', marker_symbol='triangle-up', marker_color='green', name='Buy'))
        fig.add_trace(go.Scatter(x=sell_signals['datetime'], y=sell_signals['close'], mode='markers', marker_symbol='triangle-down', marker_color='red', name='Sell'))

        fig.update_layout(height=600, xaxis_title="Date", yaxis_title="Price", legend_title="Legend", template="plotly_white")
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.error("‚ùå No data found. Please check the symbol or try again later.")
